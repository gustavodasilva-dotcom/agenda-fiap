@page "/contatos"
@using WebUI.Models
@using WebUI.Services
@inject NavigationManager NavigationManager
@inject ContatosService ContatosService
@rendermode InteractiveServer


<PageTitle>Contatos</PageTitle>

<h1>Contatos</h1>

<div class="d-flex justify-content-end mb-3">
    <a class="btn btn-primary" href="/adicionar-contato">Novo Contato</a>
</div>
<table class="table">
    <thead>
        <tr>
            <th>Nome</th>
            <th>Telefone</th>
            <th>Email</th>
            <th>DDD</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var contato in contatosList)
        {
            <tr>
                <td>@contato.Nome</td>
                <td>@contato.Telefone</td>
                <td>@contato.Email</td>
                <td>@contato.DDD</td>
                <td>
                    <button class="btn btn-primary">Editar</button>
                    <button class="btn btn-danger" @onclick="() => ExcluirContato(contato)">Excluir</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    List<ContatoModel> contatosList = new List<ContatoModel>();

    protected override async Task OnInitializedAsync()
    {
        contatosList = await ContatosService.GetContatosAsync();
    }

    private async Task ExcluirContato(ContatoModel contato)
    {
        bool sucesso = await ContatosService.ExcluirContatoAsync(contato.Id);

        contatosList = await ContatosService.GetContatosAsync();

    }
}
